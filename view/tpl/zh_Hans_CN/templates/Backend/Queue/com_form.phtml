<!--
================================================================================================================ 
模板文件：/www/wwwroot/center.cncest.uk/app/code/Weline/Queue/view/templates/Backend/Queue/form.phtml START
================================================================================================================
 -->
<?php

/**@var \Weline\Framework\View\Template $this */

/**@var \Weline\Backend\Block\ThemeConfig $themeConfig */

use Weline\Framework\Manager\ObjectManager;

$themeConfig = ObjectManager::getInstance(\Weline\Backend\Block\ThemeConfig::class);
?>
<!DOCTYPE html>
<!--
 *@Author       秋枫雁飞
 *@Email        aiweline@qq.com
 *@Forum        https://bbs.aiweline.com
 *@DESC         后台共用头部
-->
<html lang='en' <?= ('rtl' === $themeConfig->getThemeModel()) ? " dir=\"rtl\"" : '' ?>>

<head>
    <!--
============================================================================================================== 
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-admin/view/templates/common/head.phtml START
==============================================================================================================
 -->
<?php
/**@var \Weline\Framework\View\Template $this */
/**@var \Weline\Backend\Block\ThemeConfig $themeConfig */
$themeConfig = \Weline\Framework\Manager\ObjectManager::getInstance(\Weline\Backend\Block\ThemeConfig::class);
?>
<?php
/**@var \Weline\Framework\View\Template $this */
?>
<meta charset="UTF-8">
<title><?php echo $this->getData('title'); ?></title>
<!--元数据-->
<meta content="<?php echo $this->getData('description'); ?>" name="description"/>
<meta charset='UTF-8'>
<meta name='viewport' content='width=device-width, initial-scale=1.0, shrink-to-fit=no'>
<meta content="<?php echo $this->getData('title'); ?>" name='author'/>
<meta content="<?php echo $this->getData('description'); ?>" name='description'/>
<link rel="Shortcut Icon" href="/weline/module-backend/view/statics/img/favicon.png">
<link rel="Bookmark" href="/weline/module-backend/view/statics/img/favicon.png">
<!--加载requirejs-->
<?php if (DEV) : ?>
    <!--        <script src="/weline/module-backend/view/statics/backend/lib/requirejs/2.3.6/requirejs.js"></script>-->
<?php
else:
    ?>
    <!--        <script src="/weline/module-backend/view/statics/backend/lib/requirejs/2.3.6/requirejs.min.js"></script>-->
<?php
endif;
?>
<!--加载require常用js模块-->
<!--<script src="/weline/module-backend/view/statics/base/require.configs.js"></script>-->
<?php echo framework_view_process_block([
    'class' => 'Weline\\Backend\\Block\\Header\\Base',
    'template' => 'Weline_Admin::header/base.phtml',
],$vars=[]);?>

<!--css-->
<!--loading-->
<link  href='/weline/module-admin/view/statics/libs/loading/loading.css' rel="stylesheet" type="text/css"/>
<link  href='/weline/module-admin/view/statics/backend/lib/bootstrap-5.1.3-dist/css/bootstrap.min.css' rel="stylesheet" type="text/css"/>
<link  href='/weline/module-admin/view/statics/backend/lib/font-awesome-4.7.0/css/font-awesome.min.css' rel="stylesheet" type="text/css"/>
<!-- Bootstrap Css -->
<link href="<?= $this->fetchTagSourceFile('statics', 'Weline_Admin::assets/css/bootstrap' . ($themeConfig->getThemeModel() ? '-' . $themeConfig->getThemeModel() : '') . '.min.css') ?>"
      rel="stylesheet"
      type="text/css"/>
<!-- Icons Css -->
<link  href='/weline/module-admin/view/statics/assets/css/icons.min.css' rel="stylesheet" type="text/css"/>
<!-- App Css-->
<link href="<?= $this->fetchTagSourceFile('statics', 'Weline_Admin::assets/css/app' . ($themeConfig->getThemeModel() ? '-' . $themeConfig->getThemeModel() : '') . '.min.css') ?>"
      rel="stylesheet" type="text/css"/>
<!--JS-->
<script  src='/weline/module-backend/view/statics/backend/lib/jquery/3.6.0/jquery.js'></script>
<?php if (DEV): ?>
<!--        <script src="/weline/module-backend/view/statics/backend/lib/jquery/3.6.0/jquery.map"></script>-->
<?php endif; ?>
<!--加载配置页头-->
<?php
echo $this->getHeader()->getHtml();
?>

<!--
===============================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-admin/view/tpl/zh_Hans_CN/templates/common/com_head.phtml END
===============================================================================================================================
-->
    <title><?= __('Weline Admin 管理面板') ?></title>
    <!-- twitter-bootstrap-wizard css -->
    <link rel='stylesheet' href='/weline/module-admin/view/statics/assets/libs/twitter-bootstrap-wizard/prettify.css'>
    <!-- Sweet Alert-->
    <link href='/weline/module-admin/view/statics/assets/libs/sweetalert2/sweetalert2.min.css' rel='stylesheet' type='text/css'/>
    <script  src='/weline/module-backend/view/statics/backend/lib/vue/vue2.6.11.js'></script>
    <link  href='/Weline/Eav/view/statics/libs/bootstrap-colorpicker/bootstrap-colorpicker.min.css' rel="stylesheet" type="text/css"/>
    <style>
        .input-group-addon {
            display: inline-block;
            width: 40px;
            height: 38px;
            border: 1px solid #ced4da;
            border-radius: 4px;
        }

        span.required {
            color: red
        }
    </style>

</head>

<body <?= $themeConfig->getLayouts() ?? ''; ?> class='bg-transparent'>

<!--页头工具条 开始-->
<!--
====================================================================================================================== 
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-admin/view/templates/common/page/loading.phtml START
======================================================================================================================
 -->
<?php
/**@var \Weline\Framework\View\Template $this */
?>
<!--Loading-->
<section id="loading">
    <div class='loader loader-1'>
        <div class='loader-outter'></div>
        <div class='loader-inner'></div>
    </div>
</section>
<script>
    function showLoading() {
        $('#loading').show()
    }

    function hideLoading() {
        $('#loading').hide()
    }

    $(function () {
        $('#loading').hide()
    })
</script>
<!--
=======================================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-admin/view/tpl/zh_Hans_CN/templates/common/page/com_loading.phtml END
=======================================================================================================================================
-->
<!--页头工具条 结束-->

<!-- 开始 页面 -->
<div class="layout-wrapper overflow-hidden " id="QueuePage">
    <!-- start page message -->
    <div class='row'>
        <!--
============================================================================================================== 
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-component/view/templates/message.phtml START
==============================================================================================================
 -->
<?php
echo \Weline\Framework\Manager\ObjectManager::getInstance(\Weline\Framework\Manager\MessageManager::class);
?>
<!--
===============================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-component/view/tpl/zh_Hans_CN/templates/com_message.phtml END
===============================================================================================================================
-->
    </div> <!-- end message -->
    <div class='card'>
        <div class='card-body overflow-hidden'>
            <div id='progress-wizard' class='twitter-bs-wizard'>
                <ul class='twitter-bs-wizard-nav nav-justified'>
                    <!--                    选择队列类型-->
                    <li class='nav-item nav-link' :class="{active:activeName=='progress-select-queueData'}"
                        @click="changeNav('progress-select-queueData')" scope="queue" name="progress"
                        value="progress-select-queueData">
                        <span class='step-number'>01</span>
                        <span class='step-title'>
                                选择队列类型
                            </span>
                        <span class='help-block' v-if="params.type_id !== ''">
                                你选择了
                                <span class='text-primary'
                                      v-text="'('+ findLabel(queue_types,params.type_id,'type_id','name')+')'"></span>
                            </span>
                    </li>
                    <!--                    选择队列类型-->
                    <li class='nav-item nav-link' :class="{active:activeName=='progress-params'}"
                        @click="changeNav('progress-params')" scope="queue" name="progress"
                        value="progress-params">
                        <span class='step-number'>02</span>
                        <span class='step-title'>
                                设置队列参数
                            </span>
                        <span class='help-block' v-if="params.type_id!==''">
                                请设置队列属性
                            </span>
                    </li>
                    <!--                   属性组-->
                    <li class='nav-item nav-link' :class="{active:activeName=='progress-confirm'}"
                        @click="changeNav('progress-confirm')"
                        value="progress-confirm">
                        <span class='step-number'>03</span>
                        <span class='step-title'>
                                确认队列
                            </span>
                        <span class='help-block' v-if="params.group_id!==''">
                                你即将确认创建队列，请确认队列信息。
                            </span>
                    </li>

                </ul>

                <div id='bar' class='progress mt-5'>
                    <div class='progress-bar bg-success progress-bar-striped progress-bar-animated'></div>
                </div>
                <div class='tab-content twitter-bs-wizard-tab-content'>
                    <!--队列类型结果-->
                    <div class='tab-pane' :class="{active:activeName=='progress-select-queueData'}">
                        <input type='hidden' name='progress' value='progress-select-queueData'>
                        <input type='hidden' name='next_progress' value='progress-params'>
                        <div class='row'>
                            <div class='mx-auto col-lg-6 mt-2 mb-4'>
                                <div class='input-group'>
                                    <input type='search' class='form-control rounded' id='search-queueData'
                                           placeholder='请输入要查找的队列类型名或者队列类型代码'
                                           aria-label='请输入要查找的队列类型名或者队列类型代码'
                                           v-model="QueueTypesSearchVal"
                                           @input="renderSearchQueueTypes()"
                                           aria-describedby='search-addon'/>
                                    <button type='button' class='btn btn-outline-primary'
                                            @click='renderSearchQueueTypes()'>
                                        搜索队列类型
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class='row'>
                            <div class='mx-auto col-lg-6 mt-2 mb-4'>
                                <div class='input-group'>
                                    <p class='text-info m-0 text-break'>
                                        <?php if($module or $dir ):?>
                                            <b>
                                                来源:
                                            </b>
                                            <?=$name ;?>
                                            <b>
                                                参数：
                                            </b>
                                            【
                                            module：
                                            <?=$module ;?>
                                                                                            <lang>,
                                                dir：
                                                <?=$dir ;?>
                                                】
                                            </lang>
                                        <?php endif;?>
                                    </p>
                                </div>
                                <b>
                                    请选择任务类型：
                                </b>
                                <div class='input-group'>
                                    <select id='search-queueData-result'
                                            scope='queue'
                                            class='form-select form-control rounded' size='10' name='type_id'
                                            data-style='btn-primary' data-width='fit'
                                            aria-label='搜索【队列类型】结果'
                                            v-model='params.type_id' aria-describedby='search-addon' required>
                                        <option v-for='v in queue_types' :value='v.type_id' :label='v.name' :tip='v.tip'
                                                v-bind:selected='v.type_id == params.type_id'
                                                @click="changeTypeTip(v)">
                                        </option>
                                    </select>
                                </div>
                            </div>
                            <div class='mx-auto col-lg-6 mt-2 mb-4'>
                                <b>
                                    队列类型提醒：
                                </b>
                                <div class='input-group'>
                                    <p v-html="tip"></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--参数选择-->
                    <div class='tab-pane' :class="{active:activeName=='progress-params'}">
                        <div class="row">
                            <div class='mx-auto col-md-4 mb-3'>
                                <div class='input-group gap-2 required'>
                                    <!--必填星号-->
                                    <label for='queueName' class='control-label'><span class='text-danger'>*</span>
                                        队列名称
                                    </label>
                                    <input type='text' v-model='params.name' class='w-100 form-control' id='queueName'
                                           required scope='queue' name='name'>
                                </div>
                            </div>
                        </div>
                        <div class='row' id="queueParamsForm">

                        </div>
                    </div>
                    <!--确认信息-->
                    <div class='tab-pane' :class="{active:activeName=='progress-confirm'}">
                        <div class='row'>
                            <b>
                                <h2>
                                    队列信息总览：
                                </h2>
                                <hr>
                            </b>
                            <p>
                                <label>
                                    队列名称：
                                </label>
                                <span v-text="params.name"></span>
                            </p>
                            <p>
                                <label>
                                    队列类型：
                                </label>
                                <span v-text="'('+ findLabel(queue_types,params.type_id,'type_id','name')+')'"></span>
                            </p>
                            <p>
                                <label>
                                    执行类：
                                </label>
                                <span class="text-primary"
                                      v-text="findLabel(queue_types,params.type_id,'type_id','class')"></span>
                            </p>
                            <hr>
                            <p>
                                <b class="font-size-18">
                                    参数信息：
                                </b>
                                <br>
                            <div v-for='attribute in params.attributes'>
                                <label v-text='attribute.name+":"'></label>
                                <span v-text='attribute.value_alias'></span>
                            </div>
                            </p>
                        </div>
                        <div v-if="(activeName=='progress-confirm')">
                            <button class='btn btn-primary pull-right' @click='submitQueue'>
                                提交
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END layout-wrapper -->
<!--右边栏-->

<!--
================================================================================================================ 
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-admin/view/templates/common/footer.phtml START
================================================================================================================
 -->
<?php
/**@var \Weline\Framework\View\Template $this */
?>
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            <div class="footer-wapper">
                <?php echo framework_view_process_block([
    0 => 'Weline\\Backend\\Block\\Version',
]);?>
            </div>
        </div>
    </div>
</div>
<!-- end Account pages -->

<!-- JAVASCRIPT -->
<!--<script src="/weline/module-admin/view/statics/assets/libs/jquery/jquery.min.js"></script>-->
<script src="/weline/module-admin/view/statics/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/weline/module-admin/view/statics/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="/weline/module-admin/view/statics/assets/libs/simplebar/simplebar.min.js"></script>
<script src="/weline/module-admin/view/statics/assets/libs/node-waves/waves.min.js"></script>

<script src="/weline/module-admin/view/statics/assets/js/app.js"></script>
<!--
================================================================================================================== 
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-backend/view/templates/public/footer.phtml START
==================================================================================================================
 -->
<?php echo framework_view_process_block([
    0 => 'Weline\\Backend\\Block\\Footer\\Base',
]);?>
<!--加载配置页脚-->
<?php
/**@var \Weline\Framework\View\Template $this */
if($this->getFooter()){
    echo $this->getFooter()->getHtml();
}
?>
<!--
===================================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-backend/view/tpl/zh_Hans_CN/templates/public/com_footer.phtml END
===================================================================================================================================
-->
<!--
=================================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-admin/view/tpl/zh_Hans_CN/templates/common/com_footer.phtml END
=================================================================================================================================
-->
<!-- twitter-bootstrap-wizard js -->
<script src='/weline/module-admin/view/statics/assets/libs/twitter-bootstrap-wizard/jquery.bootstrap.wizard.min.js'></script>

<!-- Table Editable plugin -->
<script src='/weline/module-admin/view/statics/assets/libs/table-edits/build/table-edits.min.js'></script>

<script src='/weline/module-admin/view/statics/assets/libs/twitter-bootstrap-wizard/prettify.js'></script>

<!-- form wizard init -->
<script src='/Weline/Queue/view/statics/backend/js/pages/form-wizard.init.js'></script>
<!-- Sweet Alerts js -->
<script src='/weline/module-admin/view/statics/assets/libs/sweetalert2/sweetalert2.min.js'></script>

<!-- Sweet alert init js-->
<script src='/weline/module-admin/view/statics/assets/js/pages/sweet-alerts.init.js'></script>
<script  src='/Weline/Eav/view/statics/libs/bootstrap-colorpicker/bootstrap-colorpicker.min.js'></script>
<!--
============================================================================================================ 
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-taglib/view/taglib/js/debounce.phtml START
============================================================================================================
 -->
<script>
    /*延迟期间最多执行一次：优化输入请求过多ajax*/
    function debounce(func, delay) {
        let timeoutId;
        return function (...args) {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
            timeoutId = setTimeout(() => {
                func.apply(this, args);
                timeoutId = null;
            }, delay);
        };
    }
</script>
<!--
=============================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/vendor/weline/module-taglib/view/tpl/zh_Hans_CN/taglib/js/com_debounce.phtml END
=============================================================================================================================
-->
<script>
    var QueuePage = new Vue({
        el: '#QueuePage',
        data: {
            tip: '',
            dir: '<?=$dir ;?>',
            module: '<?=$module ;?>',
            queueName: '<?=($queueData['name']??'') ;?>',
            params: {
                id: '<?=($queueData['queue_id']??'') ;?>', //队列ID
                type_id: '<?=($queueData['type_id']??'') ;?>', //选择队列类型ID
                attributes: [], //队列属性
                name: '<?=($queueData['name']??'') ;?>',
            },
            activeName: '<?=($queueData['progress']??"progress-select-queueData") ;?>', //导航选中名称
            QueueTypesSearchVal: '', //搜队列类型名称
            queue_types: <?= isset($queue_types) ? json_encode($queue_types) : '[]' ?>,
            typeAttributeParams: [],
            types: <?= isset($types) ? json_encode($types) : '[]' ?>,
        },
        mounted() {
            this.activeName = '<?=($queueData['progress']??"progress-select-queueData") ;?>';
            if (this.params.type_id) {
                this.renderSearchQueueTypeAttributes();
            }
            // 自动选中提示
            if (this.params.type_id) {
                for (var i = 0; i < this.queue_types.length; i++) {
                    if (this.queue_types[i].type_id == this.params.type_id) {
                        this.changeTypeTip(this.queue_types[i])
                        break;
                    }
                }
            }
        },
        updated() {

        },
        methods: {
            changeTypeTip(t) {
                this.tip = t.tip
                this.queueName = t.name
            },
            // 提交
            submitQueue() {
                if (!this.params.type_id) {
                    Swal.fire({
                        title: '请先选择队列类型再操作！',
                        text: '当前队列类型为空！无法创建属性！',
                        icon: 'warning',
                        confirmButtonText: '好的'
                    })
                    return false
                }
                $.ajax({
                    type: 'POST',
                    url: "<?=$this->getBackendUrl('*/backend/queue/form')?>?module="+this.module+"&dir="+this.dir,
                    data: this.params,
                    success: function (res) {
                        if (res.code === 200) {
                            Swal.fire({
                                title: res.msg,
                                icon: 'success',
                                confirmButtonText: '好的'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    showLoading()
                                    window.parent.location.reload();
                                }
                            })
                        } else {
                            Swal.fire({
                                title: '队列创建失败!',
                                text: JSON.stringify(res.msg),
                                icon: 'error',
                                confirmButtonText: '好的'
                            })
                        }
                    }
                })
            },
            debounceChange: debounce(function (code, type_id, set_id, group_id) {
                if (!type_id) {
                    Swal.fire({
                        title: '请先选择队列类型再操作！',
                        text: '当前队列类型为空！无法创建属性！',
                        icon: 'warning',
                        confirmButtonText: '好的'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.activeName = 'progress-select-queueData';
                        }
                    })
                    return false
                }
                $.ajax({
                    type: "get",
                    url: '<?=$this->getBackendUrl("*/backend/queue/search")?>?field=code&limit=1&search=' + code + '&type_id=' + type_id + '&set_id=' + set_id + '&group_id=' + group_id,
                    dataType: "json",
                    success: (res) => {
                        if (res.items.length > 0) {
                            Swal.fire({
                                title: '属性已存在！',
                                text: '该属性已存在！',
                                icon: 'warning',
                                confirmButtonText: '好的'
                            }).then(function (result) {
                                if (result.isConfirmed) {
                                    $('#progress-queueData-code').css({border: 'red 1px solid'});
                                }
                            })
                        } else {
                            $('#progress-queueData-code').css({border: 'green 1px solid'});
                        }
                    },
                    error: (res) => {
                        console.log(res)
                    }
                })
            }, 500),
            // 查询code是否可用
            checkCode(e) {
                this.debounceChange(this.params.code, this.params.type_id, this.params.set_id, this.params.group_id)
            },
            /*队列类型搜索*/
            renderSearchQueueTypes: debounce(function (e) {
                $.ajax({
                    url: '<?=$this->getBackendUrl("*/backend/queue/searchType")?>?q=' + this.QueueTypesSearchVal + '&module=<?=$module ;?>&dir=<?=$dir ;?>',
                    success: (res) => {
                        this.queue_types = res['data'];
                    }
                })
            }, 500),

            /* 队列类型属性搜索渲染 */
            renderSearchQueueTypeAttributes(e) {
                let queue_id = '';
                if (this.params.id) {
                    queue_id = '&queue_id=' + this.params.id
                }
                $.ajax({
                    url: '<?=$this->getBackendUrl("*/backend/queue/typeAttributes")?>?id=' +
                        this.params.id + '&type_id=' + this.params.type_id,
                    success: (res) => {
                        if (res['msg']) {
                            Swal.fire({
                                title: '警告！',
                                text: res['msg'],
                                icon: 'error',
                                dangerMode: true,
                                confirmButtonText: '好的'
                            })
                            return false;
                        }
                        let html = '';
                        let queueParamsForm = $('#queueParamsForm')
                        queueParamsForm.html(html)
                        for (var i = 0; i < res['data'].length; i++) {
                            html += `<div class='gap-2 col-lg-4 col-md-6 col-sm-12'>
${res['data'][i].html}
                                </div>`;
                        }
                        if ('' === html) {
                            html = '队列无属性，可以直接进行下一步提交。'
                        }
                        queueParamsForm.html(html)
                        this.typeAttributeParams = res['data'];
                    }
                })
            },
            //查找label
            findLabel(arr, id, key, name) {
                let label = '';
                arr.forEach((item) => {
                    if (item[key] == id) {
                        label = item[name]
                    }
                })
                return label
            },
            //     改变属性类型
            changeType(arr, id) {
                let find_item = {}
                arr.forEach((item) => {
                    if (item.type_id == Number(id)) {
                        this.params.has_option = item.is_swatch;
                        this.stopable = item.is_swatch;
                        find_item = item;
                    }
                });
                this.debounceSaveType(find_item);
                this.activeAttrItem = find_item;
            },
            changeNav(name, reload = true) {
                this.activeName = name;
                if (name === 'progress-params' && this.params.type_id !== '' && reload) {
                    this.renderSearchQueueTypeAttributes();
                }
                if (name === 'progress-confirm') {
                    let queueParamsForm = $('#queueParamsForm')
                    // 检查队列名字
                    if (!this.params.name) {
                        const queueName = $('#queueName')
                        this.changeNav('progress-params')
                        $('html, body').animate({
                            scrollTop: queueName.offset().top - 10 // 减去10是为了确保输入框上方有一点空间
                        }, 500);
                        queueName.focus().css({border: 'red 1px solid'})
                        return false
                    }
                    // 读取form中的属性输入框参数
                    let inputs = queueParamsForm.find('*[scope="queue"]')
                    this.params.attributes = []
                    inputs.each((index, item) => {
                        item = $(item)
                        // 如果存在必填项没有填写则跳转到对应的输入框，并将border边框设置红色
                        if (item.attr('required')) {
                            if (!item.val() || (typeof item.val() === 'object' && item.val().length === 0)) {
                                item.focus();
                                this.changeNav('progress-params', false)
                                $('html, body').animate({
                                    scrollTop: item.offset().top - 10 // 减去10是为了确保输入框上方有一点空间
                                }, 500);
                                item.css({border: 'red 1px solid'});
                                Swal.fire({
                                    title: '警告！',
                                    text: '请填写必填项: ' + item.attr('title'),
                                    icon: 'error',
                                    dangerMode: true,
                                    confirmButtonText: '好的'
                                })
                                return false
                            }
                        }
                        let model_class_data = item.attr('model_class_data')
                        let alias = item.val();
                        if (model_class_data) {
                            model_class_data = JSON.parse(model_class_data)
                            if (typeof item.val() === 'object') {
                                alias = '';
                                item.val().forEach((i) => {
                                    if (model_class_data[i]) {
                                        alias += model_class_data[i] + ',';
                                    }
                                })
                            } else {
                                if (model_class_data[alias]) {
                                    alias = model_class_data[alias]
                                }
                            }
                        }
                        this.params.attributes.push({
                            name: item.attr('title'),
                            code: item.attr('name'),
                            value: item.val(),
                            value_alias: alias
                        })
                    })
                }
            },
        },
    })
</script>

<script>
$(function (){
    function initScope(scope_eles){
        if(typeof debounce != 'function'){
            /*延迟期间最多执行一次：优化输入请求过多ajax*/
            function debounce(func, delay) {
                let timeoutId;
                return function (...args) {
                    if (timeoutId) {
                        clearTimeout(timeoutId);
                    }
                    timeoutId = setTimeout(() => {
                        func.apply(this, args);
                        timeoutId = null;
                    }, delay);
                };
            }
        }
        // jquery检测所有带了scope属性的元素
        scope_eles.on('input change click', debounce(function(e){
                let target = $(this)
                let events = target.attr('event')
                if(!events){
                    events = 'input change click'
                }
               
                events = events.split(' ')
                let has_event = false
                for(let event of events){
                    event = event.trim(' ')
                    if(event && e.type == event){
                        has_event = true
                    }
                }
                if(!has_event){
                    return
                }
                // 检查输入框类型
                let tag = this.tagName.toLowerCase()
                let value = '';
                if(tag === 'input' || tag === 'textarea' || tag === 'select'){
                    value = target.val()
                }else{
                    value = target.attr('value')
                }
                let scope = target.attr('scope')
                let name = target.attr('name')
                
                switch (target.attr('type')){
                    case 'checkbox':
                        value = target.prop('checked')?target.attr('value'):'';
                        break;
                }
                let url = '<?=$this->getBackendUrl('backend/user-data')?>'
                    $.ajax({
                    url: url,
                    type: 'post',
                    data: {
                        scope: scope,
                        value: value,
                        name: name,
                    },
                    success: function(data){
                        console.log(data)                        
                    },
                    error: function(data){
                        console.log(data)                
                    }
                    }).done(function (res){
                    })
            }, 500))
        // 检测scope,每个scope只加载一次
        let scopes = Array.from(new Set(scope_eles.map(function(index, scopeEle){
            return scopeEle.getAttribute('scope')            
        })))
        let scopeDataItems = {};
        for(let scope of scopes){
            $.ajax({
                    url: '<?=$this->getBackendUrl('backend/user-data')?>',
                    type: 'get',
                    async: false,
                    data: {
                        scope: scope,            
                    }
                    }).done(function(res){
                    if(res['data'] !== undefined){
                        let scopeData = Object.entries(res.data)
                        for (scope_ele of scope_eles){
                            for(let key of scopeData){
                                let eleScope = scope_ele.getAttribute('scope')
                                let eleKey = scope_ele.getAttribute('name')
                                if(scope === eleScope && key[0] === eleKey){
                                    let target = $('*[scope="'+scope+'"][name="'+key[0]+'"]')
                                    switch (target.attr('type')) {
                                        case 'checkbox':
                                            // 检测是否被选中
                                            if(key[1]){
                                                let checked = (key[1]!=='' && key[1]!==0 && key[1]!=='false' && key[1]!=='0' && key[1]!==false)?true:false
                                                target.prop('checked', checked)
                                            }
                                            break;
                                        case 'textarea':
                                            if(key[1] && target.textContent ===''){
                                                target.textContent = key[1]
                                            }
                                            break;
                                        case 'radio':
                                            if(key[1] && target.checked ===''){
                                                target.prop('checked', true)
                                            }
                                            break;
                                        default:
                                            if(target.val()===''){
                                                target.val(key[1])
                                            }
                                            break;                                        
                                    }
                                    target.trigger('change')
                                }
                            }
                        }
                    }
                })
        }
    }
    var scope_eles= $('*[scope]')
    initScope(scope_eles)
    // 创建一个观察器实例
    var observer = new MutationObserver((mutationsList, observer) => {
        for(let mutation of mutationsList) {
            if (mutation.type === 'childList') {
                // 元素被新增时，如果是div，查找是否有scope属性，有就初始化
                if(mutation.addedNodes.length > 0){
                    for ( let addedNode of mutation.addedNodes){
                        if(addedNode.nodeName === 'DIV'){
                            let insertedScopes = $(addedNode).find('*[scope]')
                            initScope(insertedScopes)
                        }
                    }
                }
            }
        }
    });
    // 开始观察指定的节点，需要在回调函数外部做这个调用
    let container = document.getElementById('QueuePage')
    if(!container){
        observer.observe(document.body, { childList: true, subtree: true });
    }else{
        observer.observe(container, { childList: true, subtree: true });
    }
})
</script>
</body>

</html>
<!--
=================================================================================================================================
模板文件：/www/wwwroot/center.cncest.uk/app/code/Weline/Queue/view/tpl/zh_Hans_CN/templates/Backend/Queue/com_form.phtml END
=================================================================================================================================
-->